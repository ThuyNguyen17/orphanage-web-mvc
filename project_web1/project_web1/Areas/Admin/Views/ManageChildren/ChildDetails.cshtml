@model project_web1.Models.Tre
@{
    ViewData["Title"] = "Thẻ thông tin trẻ";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_admin.cshtml";
}

<section id="content">
    <main>
        <div class="head-title mb-4">
            <div class="left">
                <h1>Dashboard</h1>
                <ul class="breadcrumb">
                    <li><a href="#">Dashboard</a></li>
                    <li><i class='bx bx-chevron-right'></i></li>
                    <li><a class="active" asp-action="Index">Manage Children</a></li>
                    <li><i class='bx bx-chevron-right'></i></li>
                    <li><a class="active" asp-action="ChildDetails">Details</a></li>
                </ul>
            </div>
        </div>

        <div class="child-profile-container">
            <!-- Profile Header Section -->
            <div class="profile-header">
                <div class="profile-badge">
                    <span class="floating-id-badge">
                        <span class="badge-label">Mã số</span>
                        <span class="gradient-id-badge">
                            @Model.MaSoTre
                        </span>
                    </span>
                </div>

                <div class="profile-identity">
                    <div class="avatar-container">
                        <img src="~/images/@(string.IsNullOrEmpty(Model.AnhDaiDien) ? "default.jpg" : Model.AnhDaiDien)"
                             alt="Ảnh đại diện của @Model.HoTen"
                             class="profile-image"
                             onerror="this.src='/images/default.jpg'" />
                    </div>
                    <h2 class="profile-name">@Model.HoTen</h2>
                </div>

                <div class="profile-meta">
                    <span class="meta-badge status">@Model.TrangThai</span>
                    <span class="meta-badge gender">
                        <i class="fas @(Model.GioiTinh == "Nam" ? "fa-mars" : "fa-venus") me-1"></i>
                        @Model.GioiTinh
                    </span>
                    <span class="meta-badge age">
                        <i class="fas fa-birthday-cake me-1"></i>
                        @(Model.NgaySinh.HasValue ? (DateTime.Now.Year - Model.NgaySinh.Value.Year) : 0) tuổi
                    </span>
                </div>
            </div>

            <!-- Profile Details Section -->
            <div class="profile-details">
                <div class="details-section">
                    <h5 class="section-title">
                        <i class="fas fa-info-circle me-2"></i>Thông tin chi tiết
                    </h5>
                    <div class="section-divider"></div>

                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">Ngày sinh</div>
                            <div class="info-value">
                                <i class="fas fa-birthday-cake text-primary"></i>
                                <span>@Model.NgaySinh?.ToString("dd/MM/yyyy")</span>
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label">Ngày nhập trung tâm</div>
                            <div class="info-value">
                                <i class="fas fa-home text-primary"></i>
                                <span>@(Model.NgayNhapTrungTam?.ToString("dd/MM/yyyy") ?? "Đã nhận nuôi")</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="details-section">
                    <h5 class="section-title">
                        <i class="fas fa-heartbeat me-2"></i>Thông tin sức khỏe
                    </h5>
                    <div class="section-divider"></div>

                    <div class="info-list">
                        <div class="info-item">
                            <div class="info-label">Tình trạng sức khỏe</div>
                            <div class="info-value">
                                <i class="fas fa-notes-medical text-primary"></i>
                                <span>@ViewData["HealthStatus"]</span>
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label">Cân nặng</div>
                            <div class="info-value">
                                <i class="fas fa-weight text-success"></i>
                                <span>@ViewData["Weight"] kg</span>
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label">Chiều cao</div>
                            <div class="info-value">
                                <i class="fas fa-ruler-vertical text-info"></i>
                                <span>@ViewData["Height"] cm</span>
                            </div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Di Ung</div>
                            <div class="info-value">
                                <i class="fas fa-allergies text-danger me-2"></i>
                                <span>@ViewData["DiUng"]</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i> Quay lại danh sách
                    </a>
                </div>

            </div>
        </div>
    </main>
</section>

<!-- CSS -->
<style>
    /* Main Container */
    .child-profile-container {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .gradient-id-badge {
        display: inline-block;
        padding: 0.35rem 1rem;
        border-radius: 50px;
        background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
        color: #0369a1;
        font-size: 0.85rem;
        font-weight: 600;
        border: 1px solid #bae6fd;
        box-shadow: 0 2px 4px rgba(2,132,199,0.1);
        text-shadow: 0 1px 1px rgba(255,255,255,0.5);
    }
    /* Profile Header */
    .profile-header {
        background: linear-gradient(135deg, #f5f7fa 0%, #e4e8ed 100%);
        padding: 2rem;
        text-align: center;
        position: relative;
    }

    .profile-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
    }

    .profile-identity {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .avatar-container {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        border: 4px solid #4a6cf7;
        background: #fff;
        box-shadow: 0 4px 12px rgba(74, 108, 247, 0.2);
        margin-bottom: 1rem;
        overflow: hidden;
    }

    .profile-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .profile-name {
        font-size: 1.75rem;
        font-weight: 700;
        color: #2d3748;
        margin: 0;
    }

    .profile-meta {
        display: flex;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .meta-badge {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: 500;
        background: #fff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        display: flex;
        align-items: center;
    }

        .meta-badge.status {
            color: #4a6cf7;
            border: 1px solid #4a6cf7;
        }

        .meta-badge.gender {
            color: #10b981;
            border: 1px solid #10b981;
        }

        .meta-badge.age {
            color: #f59e0b;
            border: 1px solid #f59e0b;
        }

    /* Profile Details */
    .profile-details {
        padding: 2rem;
    }

    .details-section {
        margin-bottom: 2rem;
    }

    .section-title {
        color: #4a6cf7;
        font-weight: 600;
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
    }

    .section-divider {
        height: 1px;
        background: #e2e8f0;
        margin-bottom: 1.5rem;
    }

    /* Info Grid Layout */
    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    .info-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    /* Info Items */
    .info-item {
        background: #f8fafc;
        border-radius: 8px;
        padding: 1.25rem;
        transition: all 0.3s ease;
        border: 1px solid #edf2f7;
    }

        .info-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(74, 108, 247, 0.1);
            border-color: #c3dafe;
        }

    .info-label {
        font-size: 0.85rem;
        color: #718096;
        margin-bottom: 0.5rem;
    }

    .info-value {
        display: flex;
        align-items: center;
        font-weight: 500;
        color: #2d3748;
    }

        .info-value i {
            width: 32px;
            height: 32px;
            background: rgba(74, 108, 247, 0.1);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 0.75rem;
            color: #4a6cf7;
        }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .profile-header {
            padding: 1.5rem;
        }

        .profile-details {
            padding: 1.5rem;
        }

        .info-grid {
            grid-template-columns: 1fr;
        }
    }
</style>